# 수정된 docker-compose.yml (Apple Silicon 지원 + 포트 충돌 해결)

networks:
  microservices-network:
    driver: bridge

volumes:
  oracle-data:

services:
  # ===========================
  # Oracle Database 서비스 (Apple Silicon 지원)
  # ===========================
  oracle-db:
    # Apple Silicon용 에뮬레이션 실행 (안정적)
    image: container-registry.oracle.com/database/express:21.3.0-xe
    platform: linux/amd64  # 에뮬레이션으로 실행
    container_name: oracle-xe-db
    hostname: oracle-db
    restart: unless-stopped

    # 포트 설정 (원래대로 복원)
    ports:
      - "1521:1521"  # Oracle DB
      - "5500:5500"  # Enterprise Manager

    environment:
      # Oracle 설정 (공식 이미지용)
      ORACLE_PWD: oracle123
      ORACLE_CHARACTERSET: AL32UTF8

    volumes:
      # 데이터 영속성
      - oracle-data:/opt/oracle/oradata
      # SQL 초기화 스크립트 마운트
      - ./sql-scripts:/opt/oracle/scripts/startup

    networks:
      - microservices-network

    # 헬스체크 설정 (공식 이미지용)
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/oracle123@localhost:1521/XE as sysdba", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # ===========================
  # User Service
  # ===========================
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    hostname: user-service
    restart: unless-stopped

    ports:
      - "8081:8080"

    environment:
      # Spring 프로필 설정
      SPRING_PROFILES_ACTIVE: docker
      # Oracle 연결 정보 (포트 변경 반영)
      DB_HOST: oracle-db
      DB_PORT: 1521
      DB_SERVICE: XEPDB1

    depends_on:
      oracle-db:
        condition: service_healthy

    networks:
      - microservices-network

  # ===========================
  # Product Service
  # ===========================
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    hostname: product-service
    restart: unless-stopped

    ports:
      - "8082:8080"

    environment:
      # Spring 프로필 설정
      SPRING_PROFILES_ACTIVE: docker
      # Oracle 연결 정보 (포트 변경 반영)
      DB_HOST: oracle-db
      DB_PORT: 1521
      DB_SERVICE: XEPDB1
      DB_SID: XEPDB1

    depends_on:
      oracle-db:
        condition: service_healthy

    networks:
      - microservices-network

  # ===========================
  # Order Service
  # ===========================
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    hostname: order-service
    restart: unless-stopped

    ports:
      - "8083:8080"


    environment:
      # Spring 프로필 설정
      SPRING_PROFILES_ACTIVE: docker
      # Oracle 연결 정보
      DB_HOST: oracle-db
      DB_PORT: 1521
      DB_SERVICE: XEPDB1
      # 서비스 URL 추가
      USER_SERVICE_URL: http://user-service:8080
      PRODUCT_SERVICE_URL: http://product-service:8080

    depends_on:
      oracle-db:
        condition: service_healthy
      user-service:  # 의존성 추가
        condition: service_started
      product-service:  # 의존성 추가
        condition: service_started


    networks:
      - microservices-network